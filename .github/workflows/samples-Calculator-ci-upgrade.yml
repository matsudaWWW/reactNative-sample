name: Calculator CI (Upgrade)

on:
  schedule:
    - cron: '0 15 * * 2' # Tuesday 3PM UTC (8AM PST)
  push:
    branches:
      - master
    paths:
      - '.github/workflows/samples-Calculator-ci-upgrade.yml'

jobs:
  upgradeCheck:
    name: Upgrade Check
    runs-on: windows-latest
    outputs:
      result: ${{ steps.upgrade.conclusion }}
    strategy:
      matrix:
        sample: [Calculator]
        reactNativeWindowsVersion: ['latest'] # Add 'preview' here when a new preview is available
    steps:
      - uses: actions/checkout@v2

      - name: Relocate to reduce long paths
        run:  Copy-item -Force -Recurse -Verbose "samples\${{ matrix.sample }}" -Destination "..\..\src"

      - name: Yarn install
        run: yarn install
        working-directory: ..\..\src

      - name: Upgrade react-native-windows
        id: upgrade
        run: ${{github.workspace}}\.github\scripts\UpgradeSmokeTest.ps1 ${{ matrix.reactNativeWindowsVersion }}
        working-directory: ..\..\src
          
      - name: Force Successful Exit
        if: failure()
        run: exit 0
  build:
    name: Build
    runs-on: windows-latest
    needs: [upgradeCheck]
    if: needs.upgradeCheck.outputs.result == 'success'
    strategy:
      matrix:
        sample: [Calculator]
        architecture: [ARM, ARM64]
        configuration: [Debug, Release]
        reactNativeWindowsVersion: ['latest'] # Add 'preview' here when a new preview is available
    steps:
      - uses: actions/checkout@v2

      - name: Relocate to reduce long paths
        run:  Copy-item -Force -Recurse -Verbose "samples\${{ matrix.sample }}" -Destination "..\..\src"

      - name: Yarn install
        run: yarn install
        working-directory: ..\..\src

      - name: Upgrade react-native-windows
        run: ${{github.workspace}}\.github\scripts\UpgradeSmokeTest.ps1 ${{ matrix.reactNativeWindowsVersion }}
        working-directory: ..\..\src

      - name: Run react-native-windows-init
        run: npx react-native-windows-init --overwrite --version ${{ matrix.reactNativeWindowsVersion }}
        working-directory: ..\..\src

      - name: Build ${{ matrix.architecture }} Debug
        if: ${{ matrix.configuration == 'Debug' }}
        run: npx react-native run-windows --no-deploy --no-launch --no-packager --logging --arch ${{ matrix.architecture }}
        working-directory: ..\..\src

      - name: Build ${{ matrix.architecture }} Release
        if: ${{ matrix.configuration == 'Release' }}
        run: npx react-native run-windows --no-deploy --no-launch --no-packager --logging --release --arch ${{ matrix.architecture }}
        working-directory: ..\..\src
  build_and_deploy:
    name: Build and Deploy
    runs-on: windows-latest
    needs: [upgradeCheck]
    if: needs.upgradeCheck.outputs.result == 'success'
    strategy:
      matrix:
        sample: [Calculator]
        architecture: [x86, x64]
        configuration: [Debug, Release]
        reactNativeWindowsVersion: ['latest'] # Add 'preview' here when a new preview is available
    steps:
      - uses: actions/checkout@v2

      - name: Relocate to reduce long paths
        run:  Copy-item -Force -Recurse -Verbose "samples\${{ matrix.sample }}" -Destination "..\..\src"

      - name: Yarn install
        run: yarn install
        working-directory: ..\..\src

      - name: Upgrade react-native-windows
        run: ${{github.workspace}}\.github\scripts\UpgradeSmokeTest.ps1 ${{ matrix.reactNativeWindowsVersion }}
        working-directory: ..\..\src

      - name: Run react-native-windows-init
        run: npx react-native-windows-init --overwrite --version ${{ matrix.reactNativeWindowsVersion }}
        working-directory: ..\..\src

      - name: Build ${{ matrix.architecture }} Debug
        if: ${{ matrix.configuration == 'Debug' }}
        run: npx react-native run-windows --no-launch --no-packager --logging --arch ${{ matrix.architecture }}
        working-directory: ..\..\src

      - name: Build ${{ matrix.architecture }} Release
        if: ${{ matrix.configuration == 'Release' }}
        run: npx react-native run-windows --no-launch --no-packager --logging --release --arch ${{ matrix.architecture }}
        working-directory: ..\..\src
